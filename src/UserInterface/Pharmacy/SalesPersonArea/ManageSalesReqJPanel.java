/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Pharmacy.SalesPersonArea;

import Business.Drug.Drug;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.SalesWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class ManageSalesReqJPanel extends javax.swing.JPanel {
    
    private JPanel upc;
    private UserAccount ua;
    private Enterprise enterprise;
    private Ecosystem ecosystem;

    /**
     * Creates new form ManageSalesReqJPanel
     */
    public ManageSalesReqJPanel(JPanel upc, UserAccount ua, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.upc = upc;
        this.ua = ua;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        populateHospitalName();
        
    }
    
    private void populateHospitalName() {
        hospclinicjComboBox.removeAllItems();
        for (Network network : ecosystem.getNetworkLst()) {
            for (Enterprise enterprise1 : network.getEnterpriseDirectory().getEnterpriseList()) {
                if ((enterprise1.getEnterpriseType().getValue().equals("Hospital"))
                        || (enterprise1.getEnterpriseType().getValue().equals("Clinic"))) {
                    if (enterprise1.getLocation().getCity().equals(enterprise.getLocation().getCity())) {
                        hospclinicjComboBox.addItem(enterprise1);
                    }
                }
            }
        }
    }
    
    private void populatesalesTable(Enterprise enterprise1) {
        DefaultTableModel model = (DefaultTableModel) medicinesalesjTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof SalesWorkRequest) {
                SalesWorkRequest swr = (SalesWorkRequest) wr;
                if(enterprise1.getOrgId() == swr.getHealtcareID()){
                Object[] row = new Object[9];
                row[0] = swr;
                row[1] = swr.getDrugs();
                row[2] = swr.getQuantity();
                row[3] = swr.getDisease();
                row[4] = swr.getPrescribedBy();
                row[5] = swr.getPatient().getName();
                row[6] = swr.getPatient().getPatientId();
                row[7] = swr.getHealthcareName();
                row[8] = swr.getHealtcareID();
                model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medicinesalesjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        hospclinicjComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        backjButton = new javax.swing.JButton();
        soldjButton = new javax.swing.JButton();
        refreshjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(115, 166, 200));

        medicinesalesjTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        medicinesalesjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestId", "Medicine Name", "Medicine Quantity", "Disease", "Prescribed by", "Patient Name", "Patient ID", "Hosp/Clinic", "Healthcare Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        medicinesalesjTable.setRowHeight(26);
        jScrollPane1.setViewportView(medicinesalesjTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 30)); // NOI18N
        jLabel1.setText("PRESCRIBED MEDICINES SALES REQUEST");

        hospclinicjComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        hospclinicjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hospclinicjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospclinicjComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel3.setText("Hospital/Clinics");

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        soldjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        soldjButton.setText("Sold");
        soldjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soldjButtonActionPerformed(evt);
            }
        });

        refreshjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(52, 52, 52)
                .addComponent(hospclinicjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1083, 1083, 1083))
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(backjButton)
                .addGap(410, 410, 410)
                .addComponent(refreshjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(soldjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
            .addGroup(layout.createSequentialGroup()
                .addGap(444, 444, 444)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospclinicjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backjButton)
                    .addComponent(soldjButton)
                    .addComponent(refreshjButton))
                .addContainerGap(252, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout cardLayout = (CardLayout) upc.getLayout();
        cardLayout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void soldjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soldjButtonActionPerformed
        int selectedRow = medicinesalesjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first");
            return;
        }
        
        Drug drug = (Drug) medicinesalesjTable.getValueAt(selectedRow, 1);
        SalesWorkRequest swr = (SalesWorkRequest) medicinesalesjTable.getValueAt(selectedRow, 0);
        
        JOptionPane.showMessageDialog(null, swr.getDrugs().getDrugName() + " medicine has been given to "
                + swr.getPatient().getName() + " prescribed by " + swr.getPrescribedBy());
        

    }//GEN-LAST:event_soldjButtonActionPerformed

    private void hospclinicjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospclinicjComboBoxActionPerformed
        Enterprise enterprise = (Enterprise) hospclinicjComboBox.getSelectedItem();
        if (enterprise != null) {
            populatesalesTable(enterprise);
        }
    }//GEN-LAST:event_hospclinicjComboBoxActionPerformed

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
         Enterprise enterprise = (Enterprise) hospclinicjComboBox.getSelectedItem();
        if (enterprise != null) {
            populatesalesTable(enterprise);
        }
    }//GEN-LAST:event_refreshjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JComboBox hospclinicjComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicinesalesjTable;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JButton soldjButton;
    // End of variables declaration//GEN-END:variables
}
