/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Pharmaceutical.MedRepArea;

import Business.Authority.Authority;
import Business.Drug.Drug;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DrugApprovalRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class MedicineApprovalRequest extends javax.swing.JPanel {

    private JPanel upc;
    private Enterprise enterprise;
    private Organization org;
    private UserAccount ua;
    private Authority authority;
    private Ecosystem ecosystem;

    /**
     * Creates new form MedicineApprovalRequest
     */
    public MedicineApprovalRequest(JPanel upc, Enterprise enterprise, Organization org, UserAccount ua, Authority authority, Ecosystem ecosystem) {
        initComponents();
        this.org = org;
        this.ua = ua;
        this.enterprise = enterprise;
        this.upc = upc;
        this.authority = authority;
        this.ecosystem = ecosystem;
        populateMedicineTable();
    }

    private void populateMedicineTable() {
        DefaultTableModel model = (DefaultTableModel) medicineAreajTable.getModel();
        model.setRowCount(0);

        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()) {
            DrugApprovalRequest dar = (DrugApprovalRequest) workRequest;
            if (dar instanceof WorkRequest) {
                for (Drug drug : dar.getDrugDirectory().getDrugList()) {
                    Object[] row = new Object[8];
                    row[0] = dar.getReqId();
                    row[1] = drug.getDrugName();
                    row[2] = drug;
                    row[3] = drug.getDisease().getDiseaseName();
                    row[4] = dar.getSender() == null ? ("N/A") : dar.getSender().getPerson().getName();
                    row[5] = dar.getReceiver() == null ? ("N/A") : dar.getReceiver().getPerson().getName();
                    row[6] = dar;
                    row[7] = dar.getMessage();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineAreajTable = new javax.swing.JTable();
        refreshjButton = new javax.swing.JButton();
        backjButton = new javax.swing.JButton();
        assignMyselfjButton = new javax.swing.JButton();
        sendForApprovaljButton = new javax.swing.JButton();
        setDrugStatusjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(115, 166, 200));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel1.setText("MEDICINE APPROVAL REQUEST");

        medicineAreajTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        medicineAreajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Name", "Medicine Code", "Disease Cure", "Sender", "Receiver", "Status", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        medicineAreajTable.setRowHeight(26);
        jScrollPane1.setViewportView(medicineAreajTable);

        refreshjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        refreshjButton.setText("Refresh");
        refreshjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButtonActionPerformed(evt);
            }
        });

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        assignMyselfjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        assignMyselfjButton.setText("Assign Myself");
        assignMyselfjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignMyselfjButtonActionPerformed(evt);
            }
        });

        sendForApprovaljButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        sendForApprovaljButton.setText("Send for Approval");
        sendForApprovaljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendForApprovaljButtonActionPerformed(evt);
            }
        });

        setDrugStatusjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        setDrugStatusjButton.setText("Set Drug Status");
        setDrugStatusjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDrugStatusjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(884, 884, 884)
                .addComponent(jLabel1)
                .addContainerGap(622, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(backjButton)
                .addGap(181, 181, 181)
                .addComponent(setDrugStatusjButton)
                .addGap(209, 209, 209)
                .addComponent(refreshjButton)
                .addGap(186, 186, 186)
                .addComponent(assignMyselfjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sendForApprovaljButton)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignMyselfjButton)
                    .addComponent(refreshjButton)
                    .addComponent(setDrugStatusjButton)
                    .addComponent(backjButton)
                    .addComponent(sendForApprovaljButton))
                .addContainerGap(292, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButtonActionPerformed
        populateMedicineTable();
    }//GEN-LAST:event_refreshjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void assignMyselfjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignMyselfjButtonActionPerformed
        int selectedRow = medicineAreajTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a row to assign to you");
            return;
        }
        
        
        DrugApprovalRequest dar = (DrugApprovalRequest) medicineAreajTable.getValueAt(selectedRow, 6);
        if(dar.getStatus().equals("Sent")) {
            JOptionPane.showMessageDialog(null, "Drug has already been sent for approval");
            return;
        }
        
        
          if(dar.getMessage().equals("Drug Approved")||dar.getMessage().equals("Drug Disapproved")){
            JOptionPane.showMessageDialog(null, "Drug status has already been set");
            return;
        }
        dar.setSender(ua);
        dar.setStatus("In-progress");
        populateMedicineTable();

    }//GEN-LAST:event_assignMyselfjButtonActionPerformed

    private void sendForApprovaljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendForApprovaljButtonActionPerformed
        DrugApprovalRequest dar;
        int selectedRow = medicineAreajTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a row to assign to you");
            return;
        }
        dar = (DrugApprovalRequest) medicineAreajTable.getValueAt(selectedRow, 6);
        if (dar.getSender() == (null)) {
            JOptionPane.showMessageDialog(null, "Please assign the  request to you first");
            return;
        }
        if (dar.getSender().getPerson().getName() != (ua.getPerson().getName())) {
            JOptionPane.showMessageDialog(null, "Please send the request only assigned to you for approval");
            return;
        }
        if(dar.getStatus().equals("Sent")){
            JOptionPane.showMessageDialog(null, "Request has already been sent to FDI analysis");
            return;
        }
        dar.setStatus("Sent");
        dar.setMessage("Please review the drug for Approval");
        populateMedicineTable();
        ecosystem.getAuthority().getWorkQueue().getWorkRequestList().add(dar);

    }//GEN-LAST:event_sendForApprovaljButtonActionPerformed

    private void setDrugStatusjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDrugStatusjButtonActionPerformed
        Drug dr2 = null;
        int selectedRow = medicineAreajTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a row to set the status ");
            return;
        }
        DrugApprovalRequest dar = (DrugApprovalRequest) medicineAreajTable.getValueAt(selectedRow, 6);
        for (Drug dr : dar.getDrugDirectory().getDrugList()) {
            if (dar.getMessage() == null) {
                JOptionPane.showMessageDialog(null, "Sorry request has not been sent for approval");
                return;
            } else if (dar.getMessage().equals("Drug Approved")) {
                if (dr.getStatus() == null) {
                    dr.setStatus("Approved");
                    for (Drug dr1 : enterprise.getDrugDirectory().getDrugList()) {
                        if (dr.getDrugCode() == dr1.getDrugCode()) {
                            dr1.setStatus("Approved");
                            dr2 = dr1;
                        }
                    }
                    // add if drug is not present in the list 
                    if (!ecosystem.getDrugDirectory().getDrugList().contains(dr2)) {
                        ecosystem.getDrugDirectory().getDrugList().add(dr2);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Drug is already Approved");
                }

            } else if (dar.getMessage().equals("Drug Disapproved")) {
                if (dr.getStatus() == null) {
                    dr.setStatus("Disapproved");
                    for (Drug dr1 : enterprise.getDrugDirectory().getDrugList()) {
                        if (dr.getDrugId() == dr1.getDrugId()) {
                            dr1.setStatus("Disapproved");
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Drus is already Disapproved");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Drug has not been approved or dissaproved yet");
            }
            return;
        }

    }//GEN-LAST:event_setDrugStatusjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignMyselfjButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicineAreajTable;
    private javax.swing.JButton refreshjButton;
    private javax.swing.JButton sendForApprovaljButton;
    private javax.swing.JButton setDrugStatusjButton;
    // End of variables declaration//GEN-END:variables
}
