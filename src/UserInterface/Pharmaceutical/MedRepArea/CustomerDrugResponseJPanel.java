/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Pharmaceutical.MedRepArea;

import Business.Drug.Drug;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DoctorPatientDrugIssueReq;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class CustomerDrugResponseJPanel extends javax.swing.JPanel {

    private JPanel upc;
    private UserAccount ua;
    private Enterprise enterprise;
    private DoctorPatientDrugIssueReq dpdi;
    private Ecosystem ecosystem;

    /**
     * Creates new form CustomerDrugResponseJPanel
     */
    public CustomerDrugResponseJPanel(JPanel upc, UserAccount ua, Enterprise enterprise, Ecosystem ecosystem) {
        initComponents();
        this.upc = upc;
        this.ua = ua;
        this.enterprise = enterprise;
        this.ecosystem = ecosystem;
        populateDrugComboBox();

    }

    private void populateDrugComboBox() {
        drugNamejComboBox.removeAllItems();
        for (Drug drug : ecosystem.getDrugDirectory().getDrugList()) {
            if(drug.getStatus() == null){
                return;
            }
            if (drug.getStatus().equals("Approved")) {
                if (drug.getPharmaceuticalId() == enterprise.getOrgId()) {
                    drugNamejComboBox.addItem(drug);
                }
            }
        }
    }

    private void populateDrugIssueTable(Drug drug) {
        DefaultTableModel model = (DefaultTableModel) allmedicineissuejTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr1 : drug.getWorkQueue().getWorkRequestList()) {
            if (wr1 instanceof DoctorPatientDrugIssueReq) {
                dpdi = (DoctorPatientDrugIssueReq) wr1;
                Object[] row = new Object[7];
                row[0] = dpdi.getReqId();
                row[1] = drug;
                row[2] = dpdi.getSender() == null ? ("N/A") : dpdi.getSender().getPerson().getName();
                row[3] = dpdi.getSafetyIssue();
                row[4] = dpdi.getCallBack();
                row[5] = dpdi;
                row[6] = dpdi.gettDate();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        allmedicineissuejTable = new javax.swing.JTable();
        drugNamejComboBox = new javax.swing.JComboBox();
        backjButton = new javax.swing.JButton();
        viewIssueListjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        callbackjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        drugOkjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(115, 166, 200));

        allmedicineissuejTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        allmedicineissuejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Code", "Sender", "Safety Issues", "CallBack", "Status", "timstamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allmedicineissuejTable.setRowHeight(26);
        jScrollPane1.setViewportView(allmedicineissuejTable);

        drugNamejComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        drugNamejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugNamejComboBoxActionPerformed(evt);
            }
        });

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        viewIssueListjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        viewIssueListjButton.setText("Refresh");
        viewIssueListjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewIssueListjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel1.setText("CUSTOMER RESPONSE ON DRUGS");

        callbackjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        callbackjButton.setText("CallBack");
        callbackjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                callbackjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Drugs");

        drugOkjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        drugOkjButton.setText("Drug Ok");
        drugOkjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugOkjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(418, 418, 418)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(20, 20, 20)
                        .addComponent(drugNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(401, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(backjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewIssueListjButton)
                .addGap(213, 213, 213)
                .addComponent(drugOkjButton)
                .addGap(176, 176, 176)
                .addComponent(callbackjButton)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drugNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewIssueListjButton)
                    .addComponent(callbackjButton)
                    .addComponent(backjButton)
                    .addComponent(drugOkjButton))
                .addContainerGap(213, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void viewIssueListjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIssueListjButtonActionPerformed
        Drug drug = (Drug) drugNamejComboBox.getSelectedItem();
        if (drug != null) {
            populateDrugIssueTable(drug);
        }
    }//GEN-LAST:event_viewIssueListjButtonActionPerformed

    private void drugNamejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugNamejComboBoxActionPerformed
        Drug drug = (Drug) drugNamejComboBox.getSelectedItem();
        if (drug != null) {
            populateDrugIssueTable(drug);
        }
    }//GEN-LAST:event_drugNamejComboBoxActionPerformed

    private void callbackjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_callbackjButtonActionPerformed
        int selectedRow = allmedicineissuejTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first");
            return;
        }
        DoctorPatientDrugIssueReq dpidr = (DoctorPatientDrugIssueReq) allmedicineissuejTable.getValueAt(selectedRow, 5);
        Drug drug = (Drug) allmedicineissuejTable.getValueAt(selectedRow, 1);
        if (dpidr.getCallBack().equals("Yes")) {
            JOptionPane.showMessageDialog(null, "drug already calledback");
            return;
        } else {
            dpidr.setCallBack("Yes");
            dpidr.setStatus("Product Withdrawn");

            for (Drug drug1 : ecosystem.getDrugDirectory().getDrugList()) {
                if (drug1.getDrugId() == drug.getDrugId()) {
                    drug1.setStatus("Drug Disapproved");
                }
            }

            for (Drug drug2 : enterprise.getDrugDirectory().getDrugList()) {
                if (drug2.getDrugId() == drug.getDrugId()) {
                    drug2.setStatus("Drug Disapproved");
                }
            }
        }
        populateDrugComboBox();
        Drug drug4 = (Drug) drugNamejComboBox.getSelectedItem();
        populateDrugIssueTable(drug4);
    }//GEN-LAST:event_callbackjButtonActionPerformed

    private void drugOkjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugOkjButtonActionPerformed
         int selectedRow = allmedicineissuejTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first");
            return;
        }
        
        Drug drug = (Drug) allmedicineissuejTable.getValueAt(selectedRow, 1);
        DoctorPatientDrugIssueReq dpidr = (DoctorPatientDrugIssueReq) allmedicineissuejTable.getValueAt(selectedRow, 5);
       if(dpidr.getStatus().equals("Drug OK")){
           JOptionPane.showMessageDialog(null, "Respond alredy sent as OK");
           return;
       }
       if(dpidr.getCallBack().equals("Yes")){
           JOptionPane.showMessageDialog(null, "Drug has already been called back");
           return; 
       }
        dpidr.setStatus("Drug OK");
        dpidr.setCallBack("No");

        populateDrugIssueTable(drug);              
    }//GEN-LAST:event_drugOkjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allmedicineissuejTable;
    private javax.swing.JButton backjButton;
    private javax.swing.JButton callbackjButton;
    private javax.swing.JComboBox drugNamejComboBox;
    private javax.swing.JButton drugOkjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewIssueListjButton;
    // End of variables declaration//GEN-END:variables
}
