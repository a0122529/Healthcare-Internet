/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.DoctorArea;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DoctorToDoctor;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class ReferToAnotherDocJPanel extends javax.swing.JPanel {

    private JPanel upc;
    private UserAccount ua;
    private Enterprise enterprise;
    private Patient patient;
    private Date date;
    private Ecosystem ecosystem;
    

    /**
     * Creates new form ReferToAnotherDocJPanel
     */
    public ReferToAnotherDocJPanel(JPanel upc, UserAccount ua, Enterprise enterprise, Patient patient, Ecosystem ecosystem) {
        initComponents();
        this.upc = upc;
        this.enterprise = enterprise;
        this.ua = ua;
        this.patient = patient;
        this.ecosystem = ecosystem;
        popuateCityComboBox();
        populatePatientReferredTable();
        
    }
    
    
    private void populatePatientReferredTable(){
        DefaultTableModel model = (DefaultTableModel) patientrefToDocjTable.getModel();
        model.setRowCount(0);
        for(WorkRequest wr : patient.getWorkQueue().getWorkRequestList()){
        if(wr instanceof DoctorToDoctor){
        DoctorToDoctor dtds = (DoctorToDoctor) wr;
        Object[] row = new Object[7];
        row[0] = dtds.getMessage() == null? ("N/A") : dtds.getMessage();
        row[1] = dtds.getDoctorName();
        row[2] = dtds.getDoctorId();
        row[3] = dtds.getHealthCareName();
        row[4] = dtds.getEntCity();
        row[5] = dtds;
        row[6] = dtds.getDate();
        model.addRow(row);
            }
        }
    }
    private void popuateCityComboBox() {
        cityjComboBox.removeAllItems();
        for (Network network : ecosystem.getNetworkLst()) {
            cityjComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseName(Network city) {
        enterpriseNamejComboBox.removeAllItems();
        for (Enterprise enterpriseOther : city.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterpriseOther.getOrgId() != enterprise.getOrgId()) {
                if (enterpriseOther.getEnterpriseType().getValue().equals("Hospital")
                        || enterpriseOther.getEnterpriseType().getValue().equals("Clinic")) {
                    enterpriseNamejComboBox.addItem(enterpriseOther);
                }
            }
        }
    }
    
    private void populateDoctorList(Enterprise enterprise) {
        docNamejComboBox.removeAllItems();
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org.getName().equals("Doctor Organization")) {
                for (Employee doctor : org.getPersonDirectory().getEmployeeDirectory().getEmployerList()) {
                    docNamejComboBox.addItem(doctor);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cityjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        enterpriseNamejComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        docNamejComboBox = new javax.swing.JComboBox();
        sendRequestjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientrefToDocjTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        treatmentInstnjTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(115, 166, 200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel1.setText("Refer Patient to Other Doctor");

        cityjComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        cityjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityjComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel2.setText("City");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel4.setText("EnterpriseName");

        enterpriseNamejComboBox.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        enterpriseNamejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseNamejComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel3.setText("Doctor");

        docNamejComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        docNamejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docNamejComboBoxActionPerformed(evt);
            }
        });

        sendRequestjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        sendRequestjButton.setText("Send Request");
        sendRequestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendRequestjButtonActionPerformed(evt);
            }
        });

        patientrefToDocjTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        patientrefToDocjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Instructions", "Referred To Doc", "Doctor Id", "Enterprise", "Enterprise City", "Status ", "Timestampl"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientrefToDocjTable.setRowHeight(26);
        jScrollPane1.setViewportView(patientrefToDocjTable);

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        treatmentInstnjTextArea.setColumns(20);
        treatmentInstnjTextArea.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        treatmentInstnjTextArea.setRows(5);
        jScrollPane2.setViewportView(treatmentInstnjTextArea);

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel5.setText("Treatment Instructions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(523, 523, 523)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cityjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(backjButton)
                                    .addComponent(jLabel5))
                                .addGap(275, 275, 275)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(enterpriseNamejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2)
                                    .addComponent(docNamejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sendRequestjButton))))))
                .addContainerGap(143, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cityjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(enterpriseNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(docNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                        .addComponent(sendRequestjButton)
                        .addGap(169, 169, 169))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backjButton)
                        .addGap(160, 160, 160))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cityjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityjComboBoxActionPerformed
        Network city = (Network) cityjComboBox.getSelectedItem();
        if (city != null) {
            populateEnterpriseName(city);
        }
    }//GEN-LAST:event_cityjComboBoxActionPerformed

    private void sendRequestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendRequestjButtonActionPerformed
        Employee doctor = (Employee) docNamejComboBox.getSelectedItem();
        String instn = treatmentInstnjTextArea.getText().trim();
        if(doctor.equals(null) || doctor == null || instn.equals("") || instn == null){
            JOptionPane.showMessageDialog(null, "Please enter all info to send request");
            return;
        }
        date = new Date();
        DoctorToDoctor dtds = new DoctorToDoctor();
        dtds.setHealthCareName(enterprise.getName());
        dtds.setHealthcareId(enterprise.getOrgId());
        dtds.setPatient(patient);
        dtds.setMessage(instn);
        dtds.setSender(ua);
        dtds.setStatus("sent");
        dtds.setDoctorName(doctor.getName());
        dtds.setDoctorId(doctor.getPersonId());
        dtds.setEntCity(enterprise.getLocation().getCity());
        dtds.setDate(date);
        
        doctor.getWorkQueue().getWorkRequestList().add(dtds);
        patient.getWorkQueue().getWorkRequestList().add(dtds);
        populatePatientReferredTable();
    }//GEN-LAST:event_sendRequestjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout cardLayout = (CardLayout) upc.getLayout();
        cardLayout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void docNamejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docNamejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docNamejComboBoxActionPerformed

    private void enterpriseNamejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseNamejComboBoxActionPerformed
        Enterprise enterprise  = (Enterprise) enterpriseNamejComboBox.getSelectedItem();
        if(enterprise != null){
            populateDoctorList(enterprise);
        }
    }//GEN-LAST:event_enterpriseNamejComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JComboBox cityjComboBox;
    private javax.swing.JComboBox docNamejComboBox;
    private javax.swing.JComboBox enterpriseNamejComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable patientrefToDocjTable;
    private javax.swing.JButton sendRequestjButton;
    private javax.swing.JTextArea treatmentInstnjTextArea;
    // End of variables declaration//GEN-END:variables
}
