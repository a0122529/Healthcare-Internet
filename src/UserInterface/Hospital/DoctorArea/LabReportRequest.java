/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.DoctorArea;

import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.LabToPatient;
import Business.WorkRequest.PatientLabRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class LabReportRequest extends javax.swing.JPanel {

    private JPanel upc;
    private Patient patient;
    private UserAccount ua;
    private PatientLabRequest plr;
    private Enterprise enterprise;
    private Date date;

    /**
     * Creates new form LabReportRequest
     */
    public LabReportRequest(JPanel upc, Patient patient, UserAccount ua, Enterprise enterprise) {
        initComponents();
        this.upc = upc;
        this.patient = patient;
        this.ua = ua;
        this.enterprise = enterprise;
        populatePatLabReqTable();
        populatePatientVitalTable();

    }

    private void populatePatLabReqTable() {
        DefaultTableModel model = (DefaultTableModel) patLabReqjTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr2 : patient.getWorkQueue().getWorkRequestList()) {
            if (wr2 instanceof PatientLabRequest) {
                plr = (PatientLabRequest) wr2;
                Object[] row = new Object[7];
                row[0] = plr.getReqId();
                row[1] = patient.getPatientId();
                row[2] = patient.getName();
                row[3] = plr.getMessage();
                row[4] = plr.getReceiver() == null ? ("N/A") : plr.getReceiver().getPerson().getName();
                row[5] = plr == null ? ("N/A") : plr;
                row[6] = plr.getTimeStamp();
                model.addRow(row);
            }
        }
    }

    private void populatePatientVitalTable() {
        DefaultTableModel model = (DefaultTableModel) patientVitalsjTable.getModel();
        model.setRowCount(0);
        if(plr == null){ 
            return;
        }
        for (WorkRequest wr1 : plr.getPatient().getWorkQueue().getWorkRequestList()) {
            if (wr1 instanceof LabToPatient) {
                LabToPatient ltp = (LabToPatient) wr1;
                Object[] row = new Object[5];
                row[0] = ltp.getRequestId();
                row[1] = ltp.getBloodPressure();
                row[2] = ltp.getRespRate();
                row[3] = ltp.gethRate();
                row[4] = ltp.getTimeStamp();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patLabReqjTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientVitalsjTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(115, 166, 200));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        patLabReqjTable.setBackground(new java.awt.Color(115, 166, 200));
        patLabReqjTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        patLabReqjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Patient Id", "Patient Name", "Patient Tests", "Receiver", "Status", "TimeStamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patLabReqjTable.setRowHeight(26);
        jScrollPane1.setViewportView(patLabReqjTable);

        jButton2.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        patientVitalsjTable.setBackground(new java.awt.Color(115, 166, 200));
        patientVitalsjTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        patientVitalsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request  Id", "BloodPressure", "Resp Rate", "Heart Rate", "Timestamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientVitalsjTable.setRowHeight(26);
        jScrollPane2.setViewportView(patientVitalsjTable);

        jButton1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jButton1.setText("Request Report ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel1.setText("LAB CHECK REQUEST");

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel2.setText("LAB REPORT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(548, 548, 548)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(349, 349, 349)
                                .addComponent(jButton1))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(117, 249, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        upc.remove(this);
        CardLayout cardLayout = (CardLayout) upc.getLayout();
        cardLayout.previous(upc);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        date = new Date();
        plr = new PatientLabRequest();
        plr.setPatient(patient);
        plr.setSender(ua);
        plr.setTimeStamp(date);
        plr.setStatus("Sent");
        plr.setMessage("Check Vitals");

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (Organization.Type.Lab.getValue() == "Lab Organization") {
                org.getWorkQueue().getWorkRequestList().add(plr);
            }
        }
        
        patient.getWorkQueue().getWorkRequestList().add(plr);
        populatePatLabReqTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        populatePatLabReqTable();
        populatePatientVitalTable();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable patLabReqjTable;
    private javax.swing.JTable patientVitalsjTable;
    // End of variables declaration//GEN-END:variables
}
