/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.DoctorArea;

import Business.Drug.Drug;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.DoctorPatientDrugIssueReq;
import Business.WorkRequest.DrugReview;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import sun.security.acl.WorldGroupImpl;

/**
 *
 * @author kshitij
 */
public class DrugResponseJPanel extends javax.swing.JPanel {

    private JPanel upc;
    private Enterprise enterprise;
    private UserAccount ua;
    private Ecosystem ecosystem;

    /**
     * Creates new form DrugResponseJPanel
     */
    public DrugResponseJPanel(JPanel upc, Ecosystem ecosystem, UserAccount ua, Enterprise enterprise) {
        initComponents();
        this.upc = upc;
        this.enterprise = enterprise;
        this.ua = ua;
        this.ecosystem = ecosystem;
        populateReviewTable();
        populateDrugComboBox();
    }

    private void populateDrugComboBox() {
        drugNamejComboBox.removeAllItems();
        for (Drug drug : ecosystem.getDrugDirectory().getDrugList()) {
            if(drug.getStatus() == null){
            }
            else if (drug.getStatus().equals("Approved")) {
                drugNamejComboBox.addItem(drug);
            }
        }
    }

    private void populateReviewTable() {
        DefaultTableModel model = (DefaultTableModel) medicineReviewjTable1.getModel();
        model.setRowCount(0);
        for (WorkRequest newWr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (newWr instanceof DrugReview) {
                DrugReview dr = (DrugReview) newWr;
                for (Drug drug : dr.getDrugDirectory().getDrugList()) {
                    Object[] row = new Object[10];
                    row[0] = dr.getReqId();
                    row[1] = drug.getDrugName();
                    row[2] = drug;
                    row[3] = drug.getDisease().getDiseaseName();
                    row[4] = dr.getSender().getPerson().getName();
                    row[5] = drug.getSideEffects();
                    row[6] = dr.getPharmaceutical();
                    row[7] = dr;
                    row[8] = dr.getCallBack() == null ? ("No") : (dr.getCallBack());
                    row[9] = dr.getStatus();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateAllDrugIssueTable(Drug drug3) {
        DefaultTableModel model = (DefaultTableModel) allmedicineissuejTable.getModel();
        model.setRowCount(0);
        for (WorkRequest wr2 : drug3.getWorkQueue().getWorkRequestList()) {
            if (wr2 instanceof DoctorPatientDrugIssueReq) {
                DoctorPatientDrugIssueReq dp = (DoctorPatientDrugIssueReq) wr2;
                if (dp.getSender().getUsername().equals(ua.getUsername())) {
                    Object[] row = new Object[10];
                    row[0] = dp.getReqId();
                    row[1] = drug3.getDrugName();
                    row[2] = drug3;
                    row[3] = drug3.getDisease().getDiseaseName();
                    row[4] = dp.getSender().getPerson().getName();
                    row[5] = dp.getSafetyIssue();
                    row[6] = drug3.getPharmaceuticalName();
                    row[7] = dp.getCallBack() == null ? ("No") : (dp.getCallBack());
                    row[8] = dp;
                    row[9] = dp.gettDate();
                    model.addRow(row);
                    //      }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        allmedicineissuejTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugIssuesjTextArea = new javax.swing.JTextArea();
        backjButton = new javax.swing.JButton();
        sendjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicineReviewjTable1 = new javax.swing.JTable();
        drugNamejComboBox = new javax.swing.JComboBox();
        sedIssuejButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        issuejTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        viewIssueListjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(115, 166, 200));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 30)); // NOI18N
        jLabel1.setText("DRUG RESPONSE");

        allmedicineissuejTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        allmedicineissuejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Name", "Medicine Code", "Disease Cure", "Sender", "Safety Issues", "Pharmaceutical Name", "CallBack", "Status", "timstamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allmedicineissuejTable.setRowHeight(26);
        jScrollPane1.setViewportView(allmedicineissuejTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel2.setText("Drug Issues");

        drugIssuesjTextArea.setColumns(20);
        drugIssuesjTextArea.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        drugIssuesjTextArea.setRows(5);
        jScrollPane2.setViewportView(drugIssuesjTextArea);

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        sendjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        sendjButton.setText("Send  Review");
        sendjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendjButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 28)); // NOI18N
        jLabel3.setText("Drug Survey for Pharmaceutical");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel4.setText("Drug");

        medicineReviewjTable1.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        medicineReviewjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Medicine Name", "Medicine Code", "Disease Cure", "Sender", "Safety Issues", "Pharmaceutical Name", "Pharmaceutical citu", "CallBack", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        medicineReviewjTable1.setRowHeight(26);
        jScrollPane3.setViewportView(medicineReviewjTable1);

        drugNamejComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        drugNamejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drugNamejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugNamejComboBoxActionPerformed(evt);
            }
        });

        sedIssuejButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        sedIssuejButton.setText("Send Issue");
        sedIssuejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sedIssuejButtonActionPerformed(evt);
            }
        });

        issuejTextArea.setColumns(20);
        issuejTextArea.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        issuejTextArea.setRows(5);
        jScrollPane4.setViewportView(issuejTextArea);

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 28)); // NOI18N
        jLabel5.setText("Drug Issue after use");

        viewIssueListjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        viewIssueListjButton.setText("Refresh");
        viewIssueListjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewIssueListjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(110, 110, 110)
                        .addComponent(drugNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backjButton)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2)
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(sendjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(662, 662, 662))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(614, 614, 614)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(690, 690, 690)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(viewIssueListjButton)
                        .addGap(164, 164, 164)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(332, 332, 332)
                        .addComponent(sedIssuejButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 2018, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(484, 484, 484)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(backjButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addGap(344, 344, 344)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendjButton))))
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(drugNamejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sedIssuejButton)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewIssueListjButton))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(984, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void sendjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendjButtonActionPerformed
        String issues = drugIssuesjTextArea.getText();
        if (issues.equals("") || issues == null) {
            JOptionPane.showMessageDialog(null, "Please first write drug review to send");
            return;
        }
        int selectedRow = medicineReviewjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to proceed");
            return;
        }
        
        
        DrugReview dr = (DrugReview) medicineReviewjTable1.getValueAt(selectedRow, 7);
        dr.setReviews(issues);
        dr.setStatus("Issue sent");
        dr.setReplied("Yes");
        dr.setReceiver(ua);
        populateReviewTable();
    }//GEN-LAST:event_sendjButtonActionPerformed

    private void sedIssuejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sedIssuejButtonActionPerformed
        String issue = issuejTextArea.getText();
        if (issue.equals("") || issue == null) {
            JOptionPane.showMessageDialog(null, "Please enter the concern regarding the drug");
            return;
        }
        
       
        Drug drug2 = (Drug) drugNamejComboBox.getSelectedItem();
        DoctorPatientDrugIssueReq dpdi = new DoctorPatientDrugIssueReq();
        
        
        dpdi.setSender(ua);
        dpdi.setSafetyIssue(issue);
        dpdi.setStatus("Sent");
        dpdi.setOrganizationCity(enterprise.getLocation().getCity());
        dpdi.setOrganizationId(enterprise.getOrganizationID());
        dpdi.setOrganizationName(enterprise.getName());
        dpdi.setCallBack("waiting");

        
        for (Drug drug1 : ecosystem.getDrugDirectory().getDrugList()) {
            if (drug2.getDrugId() == drug1.getDrugId()) {
                drug1.getWorkQueue().getWorkRequestList().add(dpdi);
            }
        }
        Drug druga = (Drug) drugNamejComboBox.getSelectedItem();
        if (druga != null) {
            populateAllDrugIssueTable(druga);
        }

    }//GEN-LAST:event_sedIssuejButtonActionPerformed

    private void viewIssueListjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIssueListjButtonActionPerformed
        Drug druga = (Drug) drugNamejComboBox.getSelectedItem();
        if (druga != null) {
            populateAllDrugIssueTable(druga);
        }
    }//GEN-LAST:event_viewIssueListjButtonActionPerformed

    private void drugNamejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugNamejComboBoxActionPerformed
         Drug druga = (Drug) drugNamejComboBox.getSelectedItem();
        if (druga != null) {
            populateAllDrugIssueTable(druga);
        }
    }//GEN-LAST:event_drugNamejComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allmedicineissuejTable;
    private javax.swing.JButton backjButton;
    private javax.swing.JTextArea drugIssuesjTextArea;
    private javax.swing.JComboBox drugNamejComboBox;
    private javax.swing.JTextArea issuejTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable medicineReviewjTable1;
    private javax.swing.JButton sedIssuejButton;
    private javax.swing.JButton sendjButton;
    private javax.swing.JButton viewIssueListjButton;
    // End of variables declaration//GEN-END:variables
}
