/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.AdminArea;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Role.PatientRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kshitij
 */
public class ManagePatientJPanel extends javax.swing.JPanel {

    private JPanel upc;
    private Ecosystem ecosystem;
    private Enterprise enterprise;

    /**
     * Creates new form ManagePatientJPanel
     */
    public ManagePatientJPanel(JPanel userProcessContainer, Enterprise enterprise,
            Ecosystem ecosystem) {
        initComponents();
        this.upc = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        populateCreatedPatient();
        searchjTextField.setEnabled(false);
        populateDotorComboBox();
        populateGenderComboBox();
    }

    private void populateCreatedPatient() {
        DefaultTableModel model = (DefaultTableModel) patientDatajTable.getModel();
        model.setRowCount(0);

        for (Patient patient : enterprise.getPersonDirectory().getPatientDirectory().getPatientList()) {
            Object[] row = new Object[8];
            row[0] = patient;
            row[1] = patient.getSex();
            row[2] = patient.getAge();
            row[3] = patient.getPatientId();
            row[4] = patient.getLocation().getCity();
            row[5] = patient.getDob();
            for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                if (ua.getPerson().getName().equals(patient.getName())) {
                    row[6] = ua.getUsername();
                    row[7] = ua.getPassword();
                }
            }
            model.addRow(row);
        }
    }

    
    private void populateGenderComboBox(){
        genderjComboBox.removeAllItems();
        genderjComboBox.addItem(Patient.male);
        genderjComboBox.addItem(Patient.female);
    }
    
    private void populateDotorComboBox() {
        doctorListjComboBox.removeAllItems();
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equals("Doctor Organization")) {
                for (Employee emp : organization.getPersonDirectory().getEmployeeDirectory().getEmployerList()) {
                    doctorListjComboBox.addItem(emp);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchjTextField = new javax.swing.JTextField();
        searchByIdjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        createPatientjButton = new javax.swing.JButton();
        patientNamejTextField = new javax.swing.JTextField();
        patientAgejTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientDatajTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patientEmailjTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        street1jTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        street2jTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cityjTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        statejTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        zipCodejTextField = new javax.swing.JTextField();
        updatejButton = new javax.swing.JButton();
        removejButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        usernamejTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        passwordjTextField = new javax.swing.JTextField();
        clickToSearchjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        doctorListjComboBox = new javax.swing.JComboBox();
        patientagejDateChooser1 = new com.toedter.calendar.JDateChooser();
        genderjComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(115, 166, 200));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 30)); // NOI18N
        jLabel1.setText("MANAGE PATIENT INFORMATION");

        searchjTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        searchByIdjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        searchByIdjButton.setText("Search");
        searchByIdjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByIdjButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel3.setText("Patient Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel4.setText("Patient Age");

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel5.setText("Patient Sex");

        createPatientjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        createPatientjButton.setText("Create Patient ");
        createPatientjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPatientjButtonActionPerformed(evt);
            }
        });

        patientNamejTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        patientAgejTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        patientDatajTable.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        patientDatajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Sex", "Patient Age", "Patient ID", "patient location", "DOB", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientDatajTable.setRowHeight(26);
        jScrollPane1.setViewportView(patientDatajTable);
        if (patientDatajTable.getColumnModel().getColumnCount() > 0) {
            patientDatajTable.getColumnModel().getColumn(0).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(1).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(2).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(3).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(4).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(6).setResizable(false);
            patientDatajTable.getColumnModel().getColumn(7).setResizable(false);
        }

        backjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        backjButton.setText("<<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel7.setText("Patient DOB");

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel8.setText("Patient Email");

        patientEmailjTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel9.setText("Streei1");

        street1jTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel10.setText("Street 2");

        street2jTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel11.setText("City");

        cityjTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel12.setText("State");

        statejTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel13.setText("Zip Code");

        zipCodejTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        updatejButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });

        removejButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        removejButton.setText("Remove");
        removejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removejButtonActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel14.setText("Username");

        usernamejTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        usernamejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernamejTextFieldActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel15.setText("Password");

        passwordjTextField.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        clickToSearchjButton.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        clickToSearchjButton.setText("Click to Search by Id");
        clickToSearchjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickToSearchjButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 29)); // NOI18N
        jLabel2.setText("Create Login");

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        jLabel16.setText("Assign Primary Doctor");

        doctorListjComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N
        doctorListjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        patientagejDateChooser1.setDateFormatString("MMM d, yyy");

        genderjComboBox.setFont(new java.awt.Font("Tahoma", 2, 27)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(backjButton)
                                .addGap(351, 351, 351)
                                .addComponent(removejButton)
                                .addGap(384, 384, 384)
                                .addComponent(updatejButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(335, 335, 335)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(patientNamejTextField))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel13))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(43, 43, 43)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(patientagejDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(street1jTextField))
                                                            .addComponent(statejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(47, 47, 47)
                                                        .addComponent(genderjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                            .addComponent(zipCodejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(61, 61, 61)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(141, 141, 141)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(cityjTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(patientAgejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                                                        .addComponent(patientEmailjTextField))
                                                                    .addComponent(street2jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(149, 149, 149)
                                                        .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(doctorListjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addComponent(createPatientjButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(clickToSearchjButton)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(searchByIdjButton)
                                                .addComponent(searchjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removejButton)
                            .addComponent(backjButton)
                            .addComponent(updatejButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(patientNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(patientAgejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(genderjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(clickToSearchjButton)
                                .addGap(43, 43, 43)
                                .addComponent(searchjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(patientEmailjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(searchByIdjButton))))
                    .addComponent(patientagejDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(street1jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(street2jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(statejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(passwordjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createPatientjButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(231, 231, 231)
                                .addComponent(jLabel6))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zipCodejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(doctorListjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createPatientjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPatientjButtonActionPerformed
        
        String name = patientNamejTextField.getText().trim();
        int age = 0;
        try {
            age = Integer.parseInt(patientAgejTextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid patient age");
            return;
        }
        String sex = (String) genderjComboBox.getSelectedItem();
        String email = patientEmailjTextField.getText().trim();
        DateFormat df = new SimpleDateFormat("yyyy-mm-dd");
        Date dateNew = new Date();
        
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd");
        //Date d = calendar.getTime();
        Date date = patientagejDateChooser1.getDate();
        if(date == null){
            JOptionPane.showMessageDialog(null, "Please select date of birth");
            return;
        }
        
        if(dateNew.compareTo(date)< 0){
            JOptionPane.showMessageDialog(null, "Date should be less than the current date");
            return;
        }
        String dob = DateFormat.getDateInstance().format(date);
        String street1 = street1jTextField.getText().trim();
        String street2 = street2jTextField.getText().trim();
        String city = cityjTextField.getText().trim();
        String state = statejTextField.getText().trim();
        String zip = zipCodejTextField.getText().trim();
        String username = usernamejTextField.getText().trim();
        String password = passwordjTextField.getText().trim();

        Employee doc = (Employee) doctorListjComboBox.getSelectedItem();
        String primDoc = doc.getName();
        int primaDocId = doc.getPersonId();

        if (name.equals("") || name == null || age == 0 || sex.equals("") || sex == null || dob.equals("") || dob == null || doc == null
                || username.equals("") || username == null || password.equals("") || password == null || doc == null) {
            JOptionPane.showMessageDialog(null, "name, age, sex, dob, primary doctor, username and password fields are mandatory");
            return;
        }

        String validName = ecosystem.getUcd().validUsernameCheck(username);
        if (validName == (null)) {
            JOptionPane.showMessageDialog(null, "Username already taken, please enter a different username.");
            return;
        }

        Patient patient = enterprise.getPersonDirectory().getPatientDirectory().addPatient(name, sex, dob, email, age,
                street1, street2, city, state, zip, primDoc, primaDocId);

        enterprise.getUserAccountDirectory().createUserAccount(username, password, patient, new PatientRole());
        populateCreatedPatient();

        ecosystem.getUcd().addUsername(username);
    }//GEN-LAST:event_createPatientjButtonActionPerformed

    private void searchByIdjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByIdjButtonActionPerformed
        int id = 0;
        try {
            id = Integer.parseInt(searchjTextField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid patient id to search");
            return;
        }
        if (id < 0) {
            JOptionPane.showMessageDialog(null, "Please enter a valid patient id");
            return;
        }

        Patient patient = ecosystem.getPersonDirectory().getPatientDirectory().searchPatient(id);
        if (patient != null) {
            ViewSearchedPatient panel = new ViewSearchedPatient(upc, patient);
            upc.add("CreateAuth", panel);
            CardLayout layout = (CardLayout) upc.getLayout();
            layout.next(upc);
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, no patient found");
            return;
        }

    }//GEN-LAST:event_searchByIdjButtonActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        upc.remove(this);
        CardLayout cardLayout = (CardLayout) upc.getLayout();
        cardLayout.previous(upc);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void removejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removejButtonActionPerformed
        int selectedRow = patientDatajTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to remove");
            return;
        }
        Patient patient = (Patient) patientDatajTable.getValueAt(selectedRow, 0);
        enterprise.getPersonDirectory().getPatientDirectory().getPatientList().remove(patient);
        ecosystem.getPersonDirectory().getPatientDirectory().getPatientList().remove(patient);
        populateCreatedPatient();

    }//GEN-LAST:event_removejButtonActionPerformed

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        int selectedRow = patientDatajTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to remove");
            return;
        }
        Patient patient = (Patient) patientDatajTable.getValueAt(selectedRow, 0);

        UpdatePatientDataJPanel panel = new UpdatePatientDataJPanel(upc, patient);
        upc.add("CreateAuth", panel);
        CardLayout layout = (CardLayout) upc.getLayout();
        layout.next(upc);
    }//GEN-LAST:event_updatejButtonActionPerformed

    private void usernamejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernamejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernamejTextFieldActionPerformed

    private void clickToSearchjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickToSearchjButtonActionPerformed
        searchjTextField.setEnabled(true);
    }//GEN-LAST:event_clickToSearchjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JTextField cityjTextField;
    private javax.swing.JButton clickToSearchjButton;
    private javax.swing.JButton createPatientjButton;
    private javax.swing.JComboBox doctorListjComboBox;
    private javax.swing.JComboBox genderjComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passwordjTextField;
    private javax.swing.JTextField patientAgejTextField;
    private javax.swing.JTable patientDatajTable;
    private javax.swing.JTextField patientEmailjTextField;
    private javax.swing.JTextField patientNamejTextField;
    private com.toedter.calendar.JDateChooser patientagejDateChooser1;
    private javax.swing.JButton removejButton;
    private javax.swing.JButton searchByIdjButton;
    private javax.swing.JTextField searchjTextField;
    private javax.swing.JTextField statejTextField;
    private javax.swing.JTextField street1jTextField;
    private javax.swing.JTextField street2jTextField;
    private javax.swing.JButton updatejButton;
    private javax.swing.JTextField usernamejTextField;
    private javax.swing.JTextField zipCodejTextField;
    // End of variables declaration//GEN-END:variables
}
